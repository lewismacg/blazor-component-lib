@page "/DataTableDemo"
@using ComponentDemo.Models
@using BlazorComponents

<h3>DataTable Demo</h3>

<DataTable ClassWrapperOverride="mobile" Items="@Items" Striped="true" ShowPaging="true" PageSize="10" SlimRows="true" ShowPageSizeSelect="false" ShowFilter="true" FieldToFilter="CustomerName" RowClassFunction="@GetRowStyle" TTableItem="SaleModel">
    <DataTableHeader>
        <th>Sales Person</th>
        <th>Customer Name</th>
        <th>Product Count</th>
        <th>Sale Name</th>
        <th>Sale Profit</th>
        <th>Sale Value</th>
    </DataTableHeader>
    <DataTableRow>
	    <td data-mobile-label="Sales Person">@context.SalesPerson</td>
	    <td data-mobile-label="Customer Name">@context.CustomerName</td>
	    <td data-mobile-label="Product Count">@context.ProductCount</td>
	    <td data-mobile-label="Sale Name">@context.SaleName</td>
	    <td data-mobile-label="Sale Profit">@($"{context.SaleProfit:c}")</td>
	    <td data-mobile-label="Sale Value">@($"{context.SaleValue:c}")</td>
    </DataTableRow>
</DataTable>

@code {
    public List<SaleModel> Items { get; private set; }

    protected override void OnInitialized()
    {
        Items = new List<SaleModel>
        {
            new ()
            {
                SalesPerson = "Mr Salesman",
                CustomerName = "Joe Blogs",
                ProductCount = 3,
                SaleName = "First Sale",
                SaleProfit = 523.45m,
                SaleValue = 200m
            },
            new ()
            {
                SalesPerson = "Mr Salesman",
                CustomerName = "Jane Doe",
                ProductCount = 1,
                SaleName = "Lost Sale",
                SaleProfit = 445m,
                SaleValue = 10m
            },
            new ()
            {
                SalesPerson = "Barry",
                CustomerName = "Jeff",
                ProductCount = 5,
                SaleName = "First Sale",
                SaleProfit = 332.45m,
                SaleValue = 32.123m
            },
            new ()
            {
                SalesPerson = "Jerry",
                CustomerName = "Tom",
                ProductCount = 355,
                SaleName = "Black Friday",
                SaleProfit = -443.45m,
                SaleValue = -130m
            },
            new ()
            {
                SalesPerson = "Bob",
                CustomerName = "Smith",
                ProductCount = 35,
                SaleName = "Tuesday",
                SaleProfit = 285m,
                SaleValue = 19m
            },
            new ()
            {
                SalesPerson = "Steve",
                CustomerName = "Smith",
                ProductCount = 101,
                SaleName = "50% off",
                SaleProfit = 101m,
                SaleValue = 9m
            }
        };

        var rand = new Random();
        var names = new string[] {"Jeff", "Bob", "Matt", "Harry", "William"};
        var lastNames = new string[] {"Jones", "Doe", "Smith"};

        var saleNames = new string[] {"Office", "Super", "Sale", "Discount", "Phone"};

        for (int i = 0; i < 100; i++)
        {
            Items.Add(new SaleModel
            {
                SalesPerson = $"{names[rand.Next(names.Length)]} {lastNames[rand.Next(lastNames.Length)]}",
                CustomerName = $"{names[rand.Next(names.Length)]} {lastNames[rand.Next(lastNames.Length)]}",
                ProductCount = rand.Next(150),
                SaleName = $"{saleNames[rand.Next(saleNames.Length)]} {saleNames[rand.Next(saleNames.Length)]} {saleNames[rand.Next(saleNames.Length)]}",
                SaleProfit = (decimal) (rand.NextDouble() * 1000),
                SaleValue = (decimal) (rand.NextDouble() * 1000)
            });
        }
    }

    protected string GetRowStyle(SaleModel model)
    {
	    if (model.SaleProfit > 300) return "table-row-green";
	    if (model.SaleProfit > 100) return "table-row-yellow";

	    return "table-row-blue";
    }
}
