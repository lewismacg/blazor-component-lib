@namespace BlazorComponents

@if (Condition.Invoke())
{
	@ChildContent
}
else
{
	<div class="loading-wrapper" @attributes="@AdditionalAttributes">
		<div class="flex-row d-flex">
			<LoadingSpinner Width="Width" Height="Height" Colour="@Colour" />
		</div>
	</div>
}

@code {
	[Parameter] public Func<bool> Condition { get; set; }
	[Parameter] public double Width { get; set; } = 3;
	[Parameter] public double Height { get; set; } = 3;
	[Parameter] public string Colour { get; set; } = "var(--primaryRed)";
	[Parameter] public RenderFragment ChildContent { get; set; }
	[Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();

		if (Condition == null) throw new InvalidOperationException("Condition must be set when using a conditional wrapper");
	}
}