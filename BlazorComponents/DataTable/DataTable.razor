@namespace BlazorComponents
@typeparam TTableItem
@inherits BlazorComponents.BaseDataTable<TTableItem>

<CascadingValue Value="@this">
	<div class="data-table-wrapper table-responsive-sm @ClassWrapperOverride">
		@if (ShowFilter)
		{
			<div class="data-table-filter">
				<div class="form-group row">
					<label class="col-form-label col-sm-4">Filter</label>
					<input class="form-control col-sm-8" type="text" placeholder="@FieldToFilter" @bind="@ItemFilter" oninput="@((ChangeEventArgs e) => OnFilterTermChange(e))" />
				</div>
			</div>
		}
		<table class="@(Striped ? "striped" : "") data-table">
			<thead>@DataTableHeader</thead>
			<tbody>
				@if (ItemList != null)
				{
					@foreach (var item in ItemList)
					{
						<TableRow Item="item" OnClickAction="(args) => { OnRowClick?.Invoke(args, item); }" RowClassFunction="@RowClassFunction">@DataTableRow(item)</TableRow>
					}
				}
			</tbody>
		</table>
		@if (ShowPaging)
		{
			<div class="data-table-paging mt-lg-1 mt-xl-1 mt-md-1 mt-sm-1 mt-4">
				<div class="paging-element">
					@if (ShowPageSizeSelect)
					{
						<div class="page-sizing">
							<div>Items per page:</div>
							<select class="dropdown-select" @onchange=@OnPageSizeChange>
								@foreach (var item in PageSizes)
								{
									<option value="@item.Size" class="dropdown-select-option" selected="@(item.Size == _pageSize)">@item.DisplayText</option>
								}
							</select>
						</div>
					}
				</div>
				<div class="paging-element">@GetPageItemCountString()</div>
				<div class="paging-element">
					<div class="paging-navigation">
						<span class="material-icons" @onclick="GotoFirstPage">skip_previous</span>
						<span class="material-icons" @onclick="PreviousPage">keyboard_arrow_left</span>
						<span class="material-icons" @onclick="NextPage">keyboard_arrow_right</span>
						<span class="material-icons" @onclick="GotoLastPage">skip_next</span>
					</div>
				</div>
			</div>
		}
	</div>
</CascadingValue>