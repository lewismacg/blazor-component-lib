@namespace BlazorComponents

<Dialog ShowDialog="@ShowDialog" DialogTitle="Confirmation">
    <div class="dialogBody">
        @ChildContent
    </div>
    <div class="dialogButtons">
		<LoadingWrapper Condition="() => IsLoading == false" Height="1.25" Width="1.25" Colour="var(--baseGrey)">
		    <button class="btn btn-green" type="button" @onclick="async () => await ButtonClicked(true)">Yes</button>
		    <button class="btn btn-red" type="button" @onclick="async () => await ButtonClicked(false)">No</button>
	    </LoadingWrapper>
    </div>
</Dialog>

@code {
	[Parameter] public EventCallback OnYes { get; set; }
	[Parameter] public EventCallback OnNo { get; set; }
	[Parameter] public bool ShowDialog { get; set; }
	[Parameter] public RenderFragment ChildContent { get; set; }
	[Parameter] public bool DisableButtonsOnClick { get; set; }

	protected bool IsLoading { get; set; }

	private async Task ButtonClicked(bool yes)
	{
		ShowDialog = false;

		if (DisableButtonsOnClick)
		{
			IsLoading = true;
			if (yes) await OnYes.InvokeAsync();
			else await OnNo.InvokeAsync();
			IsLoading = false;
		}
		else
		{
			if (yes) await OnYes.InvokeAsync();
			else await OnNo.InvokeAsync();
		}
	}
}
